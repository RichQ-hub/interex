name: Run Backend Tests
run-name: Testing main for backend tests ðŸ§ª

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Postgres credentials need not be private for integration testing.
env:
  TEST_DB_HOST: localhost 
  TEST_DB_PORT: 5432 # Postgres natively exposes the port 5432.
  TEST_DB_NAME: test_db
  DB_USER: postgres
  DB_PASSWORD: mikey098

jobs:
  backend-ci:
    name: Backend tests
    runs-on: ubuntu-latest
    # Sets the ./backend directory as the workdir for all steps in this job.
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: ${{ env.TEST_DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Checkout repository code.
        uses: actions/checkout@v4
  
      # Sets up your build environment with node installed.
      - name: Setup node version
        uses: actions/setup-node@v4
        with:
          node-version: 22.7.0
          cache: 'yarn'
          cache-dependency-path: './backend/yarn.lock' # Include location of the yarn.lock file. This is needed for a nested lock file.
          # https://stackoverflow.com/questions/68639588/github-actions-dependencies-lock-file-is-not-found-in-runners-path

      - name: Get yarn cache directory path.
        id: yarn-cache-dir-path # Gives a name to the current step which can be referred to in future steps.
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT # Allows us to add secrets to the environment variable $GITHUB_OUTPUT

      - name: Cache node_module dependencies.
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }} # Allows us to access the yarn cach path from the prev step.
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

        # A cache miss.
      - if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        name: List the state of node modules.
        continue-on-error: true
        run: yarn list

      - name: Install dependencies
        run: yarn install --frozen-lockfile # Equivalent to `npm ci`.
        # https://stackoverflow.com/questions/52499617/what-is-the-difference-between-npm-install-and-npm-ci
        # https://stackoverflow.com/questions/69459919/what-exactly-does-npm-ci-command-does-why-is-it-used-in-all-ci-pipelines-inste (IMPORTANT)

      - name: Run integration tests
        run: yarn test
        env:
          NODE_ENV: test
          TEST_DB_HOST: ${{ env.TEST_DB_HOST }}
          TEST_DB_PORT: ${{ env.TEST_DB_PORT }}
          TEST_DB_NAME: ${{ env.TEST_DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
